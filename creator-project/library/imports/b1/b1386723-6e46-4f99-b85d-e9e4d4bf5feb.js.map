{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,kBAAU,EAAE;AACR,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;AACD,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,eAAO,EAAE,CAAC;AACV,SAAC,EAAE,CAAC,IAAI;KACX;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AAClC,YAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACf,YAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACf,YAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACd,YAAI,CAAC,IAAI,GAAG,KAAK,CAAC;;AAElB,YAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AACtB,YAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAA,GAAI,EAAE,CAAC;AACpC,YAAI,CAAC,EAAE,GAAG,CAAC,AAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAK,AAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAK,EAAE,GAAG,CAAC,CAAA,AAAC,CAAC,GAAI,EAAE,CAAC;KACtE;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAI,IAAI,CAAC,IAAI,EAAE,OAAO;;AAEtB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAC3B,YAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;AAErB,YAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;AAChC,YAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAC3D,YAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrB,YAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;AAE3B,YAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,gBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;KACJ;;AAED,QAAI,EAAE,cAAS,GAAG,EAAE;AAChB,YAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACtB,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC1B,YAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrC,YAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;;AAEvC,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACvB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        boomPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        hitx: 0,\n        hity: 0,\n        hittime: 0,\n        g: -1000\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        var pos = this.node.getPosition();\n        this.x = pos.x;\n        this.y = pos.y;\n        this.time = 0;\n        this.over = false;\n        \n        var ht = this.hittime;\n        this.ox = (this.hitx - this.x) / ht;\n        this.oy = ((this.hity - this.y) - ((this.g * ht) * (ht / 2))) / ht;\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if (this.over) return;\n\n        this.time = this.time + dt;\n        var time = this.time;\n    \n        var x = this.x + time * this.ox;\n        var y = this.y + time * this.oy + this.g * time * time / 2;\n        var pos = cc.p(x, y);\n        this.node.setPosition(pos);\n\n        if (time >= this.hittime) {\n            this.over = true\n            this.boom(pos);\n        }\n    },\n    \n    boom: function(pos) {\n        var boom = cc.instantiate(this.boomPrefab);\n        boom.setPosition(pos);\n        boom.setLocalZOrder(2000);\n        this.node.getParent().addChild(boom);\n        boom.getComponent(cc.Animation).play();\n\n        this.node.destroy();\n    }\n});\n"
  ]
}